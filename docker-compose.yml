version: '3.8'

services:
  front:
    build: ./front
    depends_on:
      - apisrv
    ports:
      - "3003:80"

  apisrv:
    build:
      context: ./back
      dockerfile: ./app/apiService/Dockerfile
    depends_on:
      - redis
      - authsrv
      - newssrv
    ports:
      - "8008:8008"
    command: /bin/apisrv

  authsrv:
    build:
      context: ./back
      dockerfile: ./app/authService/Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "44044:44044"
    command: /bin/authsrv

  newssrv:
    build:
      context: ./back
      dockerfile: ./app/newsService/Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "55055:55055"
    command: /bin/newssrv

  postgres:
    image: postgres:16.1-bullseye
    restart: always
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=qwerty
     - POSTGRES_DB=go_news
    ports:
     - "5432:5432"
  
  redis:
    image: redis:7.2.3-bookworm 
    restart: always
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  memcached:
    image: memcached:1.6.23
    restart: always
    ports:
      - "11211:11211"
    volumes: 
      - memcached_data:/data

  prometheus:
    image: prom/prometheus:v2.48.1
    ports:
      - "9090:9090"
    volumes:
      - ./back/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  grafana_data:
  memcached_data: